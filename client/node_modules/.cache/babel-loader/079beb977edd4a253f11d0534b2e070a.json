{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useFetching = callback => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const callbackToReturn = () => {\n    setIsLoading(true);\n    callback().catch(error => setError(error)).finally(() => setIsLoading(false));\n  };\n\n  return [callbackToReturn, isLoading, error];\n};\n\n_s(useFetching, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useFetching;","map":{"version":3,"names":["useState","useFetching","callback","isLoading","setIsLoading","error","setError","callbackToReturn","catch","finally"],"sources":["D:/Programming/Тестовые задания/kanalservis/client/src/hooks/useFetching.ts"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nconst useFetching = (callback: () => Promise<any>): [() => void, boolean, string | null] => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const callbackToReturn = (): void => {\r\n        setIsLoading(true);\r\n        callback()\r\n            .catch(error => setError(error))\r\n            .finally(() => setIsLoading(false));\r\n    }\r\n\r\n    return [callbackToReturn, isLoading, error];\r\n}\r\n\r\nexport default useFetching;\r\n"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAwE;EAAA;;EACxF,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAU,KAAV,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAgB,IAAhB,CAAlC;;EAEA,MAAMO,gBAAgB,GAAG,MAAY;IACjCH,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,GACHM,KADL,CACWH,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAD5B,EAEKI,OAFL,CAEa,MAAML,YAAY,CAAC,KAAD,CAF/B;EAGH,CALD;;EAOA,OAAO,CAACG,gBAAD,EAAmBJ,SAAnB,EAA8BE,KAA9B,CAAP;AACH,CAZD;;GAAMJ,W;;AAcN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}