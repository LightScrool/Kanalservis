{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\\\kanalservis\\\\client\\\\src\\\\components\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport '../styles/App.scss';\nimport Container from \"./Container\";\nimport FilterManager from \"./FilterManager\";\nimport PagesList from \"./PagesList\";\nimport MyTable from \"./MyTable\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchItems } from \"../store/actionCreators/items\";\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\nimport { ItemKeys } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const allItems = useTypeSelector(state => state.items.allItems);\n  const filterField = useTypeSelector(state => state.items.filterField);\n  const filterCondition = useTypeSelector(state => state.items.filterCondition);\n  const filterValue = useTypeSelector(state => state.items.filterValue);\n  const sortField = useTypeSelector(state => state.items.sortField);\n  const sortReverse = useTypeSelector(state => state.items.sortReverse);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchItems()(dispatch);\n  }, []);\n  const filteredItems = useMemo(() => {\n    let itemsToShow = allItems;\n\n    if (filterValue == \"\") {\n      return itemsToShow;\n    }\n\n    switch (filterCondition) {\n      case \"equal\":\n        itemsToShow = allItems.filter(item => String(item[filterField]) === filterValue);\n        break;\n\n      case \"contains\":\n        itemsToShow = allItems.filter(item => String(item[filterField]).includes(filterValue));\n        break;\n\n      case \"more\":\n        if (filterField === ItemKeys.distance || filterField === ItemKeys.quantity) {\n          if (isNaN(Number(filterValue))) {\n            itemsToShow = [];\n            break;\n          }\n\n          itemsToShow = allItems.filter(item => item[filterField] > Number(filterValue));\n          break;\n        }\n\n        itemsToShow = allItems.filter(item => item[filterField] > filterValue);\n        break;\n\n      case \"less\":\n        if (filterField === ItemKeys.distance || filterField === ItemKeys.quantity) {\n          if (isNaN(Number(filterValue))) {\n            itemsToShow = [];\n            break;\n          }\n\n          itemsToShow = allItems.filter(item => item[filterField] < Number(filterValue));\n          break;\n        }\n\n        itemsToShow = allItems.filter(item => item[filterField] < filterValue);\n        break;\n    }\n\n    return itemsToShow;\n  }, [allItems, filterField, filterCondition, filterValue]);\n  const sortedFilteredItems = useMemo(() => {\n    if (sortField === null) return filteredItems;\n    let result;\n\n    if (sortField === ItemKeys.distance || sortField === ItemKeys.quantity) {\n      filteredItems.sort((a, b) => a[sortField] - b[sortField]);\n    }\n  }, [filteredItems, sortField, sortReverse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(FilterManager, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PagesList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyTable, {\n        data: filteredItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"nRYON/MqRctaRXsLdqDcPet6AJA=\", false, function () {\n  return [useTypeSelector, useTypeSelector, useTypeSelector, useTypeSelector, useTypeSelector, useTypeSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","Container","FilterManager","PagesList","MyTable","useDispatch","fetchItems","useTypeSelector","ItemKeys","App","allItems","state","items","filterField","filterCondition","filterValue","sortField","sortReverse","dispatch","filteredItems","itemsToShow","filter","item","String","includes","distance","quantity","isNaN","Number","sortedFilteredItems","result","sort","a","b"],"sources":["D:/Programming/Тестовые задания/kanalservis/client/src/components/App.tsx"],"sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport '../styles/App.scss';\r\nimport Container from \"./Container\";\r\nimport FilterManager from \"./FilterManager\";\r\nimport PagesList from \"./PagesList\";\r\nimport MyTable from \"./MyTable\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchItems} from \"../store/actionCreators/items\";\r\nimport {useTypeSelector} from \"../hooks/useTypeSelector\";\r\nimport {ItemKeys, TItem} from \"../types\";\r\n\r\nfunction App() {\r\n    const allItems = useTypeSelector(state => state.items.allItems);\r\n    const filterField = useTypeSelector(state => state.items.filterField);\r\n    const filterCondition = useTypeSelector(state => state.items.filterCondition);\r\n    const filterValue = useTypeSelector(state => state.items.filterValue);\r\n    const sortField = useTypeSelector(state => state.items.sortField);\r\n    const sortReverse = useTypeSelector(state => state.items.sortReverse);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        fetchItems()(dispatch);\r\n    }, [])\r\n\r\n    const filteredItems = useMemo<TItem[]>(() => {\r\n        let itemsToShow = allItems;\r\n\r\n        if (filterValue == \"\") {\r\n            return itemsToShow;\r\n        }\r\n\r\n        switch (filterCondition) {\r\n            case \"equal\":\r\n                itemsToShow = allItems.filter((item) => String(item[filterField]) === filterValue)\r\n                break;\r\n\r\n            case \"contains\":\r\n                itemsToShow = allItems.filter((item) => String(item[filterField]).includes(filterValue))\r\n                break;\r\n\r\n            case \"more\":\r\n                if (filterField === ItemKeys.distance || filterField === ItemKeys.quantity) {\r\n                    if (isNaN(Number(filterValue))) {\r\n                        itemsToShow = [];\r\n                        break;\r\n                    }\r\n\r\n                    itemsToShow = allItems.filter((item) => item[filterField] > Number(filterValue))\r\n                    break;\r\n                }\r\n\r\n                itemsToShow = allItems.filter((item) => item[filterField] > filterValue);\r\n                break;\r\n\r\n            case \"less\":\r\n                if (filterField === ItemKeys.distance || filterField === ItemKeys.quantity) {\r\n                    if (isNaN(Number(filterValue))) {\r\n                        itemsToShow = [];\r\n                        break;\r\n                    }\r\n\r\n                    itemsToShow = allItems.filter((item) => item[filterField] < Number(filterValue))\r\n                    break;\r\n                }\r\n\r\n                itemsToShow = allItems.filter((item) => item[filterField] < filterValue);\r\n                break;\r\n        }\r\n\r\n        return itemsToShow;\r\n    }, [allItems, filterField, filterCondition, filterValue])\r\n\r\n    const sortedFilteredItems = useMemo<TItem[]>(() => {\r\n        if (sortField === null)\r\n            return filteredItems;\r\n\r\n        let result: TItem[];\r\n        if (sortField === ItemKeys.distance || sortField === ItemKeys.quantity){\r\n            filteredItems.sort((a, b) => a[sortField] - b[sortField]);\r\n        }\r\n    }, [filteredItems, sortField, sortReverse])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container>\r\n                <FilterManager/>\r\n                <PagesList/>\r\n                <MyTable data={filteredItems}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,OAA1B,QAAwC,OAAxC;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,SAAQC,eAAR,QAA8B,0BAA9B;AACA,SAAQC,QAAR,QAA8B,UAA9B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAMC,QAAQ,GAAGH,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,QAAtB,CAAhC;EACA,MAAMG,WAAW,GAAGN,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,WAAtB,CAAnC;EACA,MAAMC,eAAe,GAAGP,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,eAAtB,CAAvC;EACA,MAAMC,WAAW,GAAGR,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYG,WAAtB,CAAnC;EACA,MAAMC,SAAS,GAAGT,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,SAAtB,CAAjC;EACA,MAAMC,WAAW,GAAGV,eAAe,CAACI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYK,WAAtB,CAAnC;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EAEAN,SAAS,CAAC,MAAM;IACZO,UAAU,GAAGY,QAAH,CAAV;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMC,aAAa,GAAGnB,OAAO,CAAU,MAAM;IACzC,IAAIoB,WAAW,GAAGV,QAAlB;;IAEA,IAAIK,WAAW,IAAI,EAAnB,EAAuB;MACnB,OAAOK,WAAP;IACH;;IAED,QAAQN,eAAR;MACI,KAAK,OAAL;QACIM,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUC,MAAM,CAACD,IAAI,CAACT,WAAD,CAAL,CAAN,KAA8BE,WAAxD,CAAd;QACA;;MAEJ,KAAK,UAAL;QACIK,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUC,MAAM,CAACD,IAAI,CAACT,WAAD,CAAL,CAAN,CAA0BW,QAA1B,CAAmCT,WAAnC,CAA1B,CAAd;QACA;;MAEJ,KAAK,MAAL;QACI,IAAIF,WAAW,KAAKL,QAAQ,CAACiB,QAAzB,IAAqCZ,WAAW,KAAKL,QAAQ,CAACkB,QAAlE,EAA4E;UACxE,IAAIC,KAAK,CAACC,MAAM,CAACb,WAAD,CAAP,CAAT,EAAgC;YAC5BK,WAAW,GAAG,EAAd;YACA;UACH;;UAEDA,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACT,WAAD,CAAJ,GAAoBe,MAAM,CAACb,WAAD,CAApD,CAAd;UACA;QACH;;QAEDK,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACT,WAAD,CAAJ,GAAoBE,WAA9C,CAAd;QACA;;MAEJ,KAAK,MAAL;QACI,IAAIF,WAAW,KAAKL,QAAQ,CAACiB,QAAzB,IAAqCZ,WAAW,KAAKL,QAAQ,CAACkB,QAAlE,EAA4E;UACxE,IAAIC,KAAK,CAACC,MAAM,CAACb,WAAD,CAAP,CAAT,EAAgC;YAC5BK,WAAW,GAAG,EAAd;YACA;UACH;;UAEDA,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACT,WAAD,CAAJ,GAAoBe,MAAM,CAACb,WAAD,CAApD,CAAd;UACA;QACH;;QAEDK,WAAW,GAAGV,QAAQ,CAACW,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACT,WAAD,CAAJ,GAAoBE,WAA9C,CAAd;QACA;IAnCR;;IAsCA,OAAOK,WAAP;EACH,CA9C4B,EA8C1B,CAACV,QAAD,EAAWG,WAAX,EAAwBC,eAAxB,EAAyCC,WAAzC,CA9C0B,CAA7B;EAgDA,MAAMc,mBAAmB,GAAG7B,OAAO,CAAU,MAAM;IAC/C,IAAIgB,SAAS,KAAK,IAAlB,EACI,OAAOG,aAAP;IAEJ,IAAIW,MAAJ;;IACA,IAAId,SAAS,KAAKR,QAAQ,CAACiB,QAAvB,IAAmCT,SAAS,KAAKR,QAAQ,CAACkB,QAA9D,EAAuE;MACnEP,aAAa,CAACY,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAChB,SAAD,CAAD,GAAeiB,CAAC,CAACjB,SAAD,CAA7C;IACH;EACJ,CARkC,EAQhC,CAACG,aAAD,EAAgBH,SAAhB,EAA2BC,WAA3B,CARgC,CAAnC;EAUA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,SAAD;MAAA,wBACI,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,OAAD;QAAS,IAAI,EAAEE;MAAf;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GAhFQV,G;UACYF,e,EACGA,e,EACIA,e,EACJA,e,EACFA,e,EACEA,e,EACHF,W;;;KAPZI,G;AAkFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}