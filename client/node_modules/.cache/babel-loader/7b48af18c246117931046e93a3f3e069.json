{"ast":null,"code":"import axios from \"axios\";\nimport { ItemsActionTypes } from \"../../types/redux\";\nimport { getDate } from \"../../utils\";\nconst URL = \"http://localhost:8080/api\";\nexport const fetchItems = () => {\n  return async dispatch => {\n    const response = await axios.get(URL);\n    const data = response.data.map(item => ({ ...item,\n      date: getDate(item.date)\n    }));\n    dispatch({\n      type: ItemsActionTypes.FETCH_ITEMS,\n      payload: data\n    });\n  };\n};\nexport const setFilteredItemsActionCreator = items => {\n  return {\n    type: ItemsActionTypes.SET_FILTERED_ITEMS,\n    payload: items\n  };\n};\nexport const setFilteredItemsAction = items => {\n  return {\n    type: ItemsActionTypes.SET_FILTERED_ITEMS,\n    payload: items\n  };\n};","map":{"version":3,"names":["axios","ItemsActionTypes","getDate","URL","fetchItems","dispatch","response","get","data","map","item","date","type","FETCH_ITEMS","payload","setFilteredItemsActionCreator","items","SET_FILTERED_ITEMS","setFilteredItemsAction"],"sources":["D:/Programming/Тестовые задания/kanalservis/client/src/store/actionCreators/items.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ItemsAction, ItemsActionTypes, TSetFilteredItemsAction} from \"../../types/redux\";\r\nimport {ItemType} from \"../../types\"\r\nimport {getDate} from \"../../utils\";\r\n\r\nconst URL = \"http://localhost:8080/api\";\r\n\r\nexport const fetchItems = () => {\r\n    return async (dispatch: Dispatch<ItemsAction>) => {\r\n        const response = await axios.get(URL);\r\n        const data: ItemType[] = response.data.map((item: ItemType) => ({...item, date: (getDate(item.date))}));\r\n        dispatch({type: ItemsActionTypes.FETCH_ITEMS, payload: data})\r\n    }\r\n}\r\n\r\nexport const setFilteredItemsActionCreator = (items: ItemType[]): TSetFilteredItemsAction => {\r\n    return {type: ItemsActionTypes.SET_FILTERED_ITEMS, payload: items}\r\n}\r\n\r\nexport const setFilteredItemsAction = (items: ItemType[]): TSetFilteredItemsAction => {\r\n    return {type: ItemsActionTypes.SET_FILTERED_ITEMS, payload: items}\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAqBC,gBAArB,QAAqE,mBAArE;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,GAAG,GAAG,2BAAZ;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC5B,OAAO,MAAOC,QAAP,IAA2C;IAC9C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUJ,GAAV,CAAvB;IACA,MAAMK,IAAgB,GAAGF,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,IAAD,KAAqB,EAAC,GAAGA,IAAJ;MAAUC,IAAI,EAAGT,OAAO,CAACQ,IAAI,CAACC,IAAN;IAAxB,CAArB,CAAlB,CAAzB;IACAN,QAAQ,CAAC;MAACO,IAAI,EAAEX,gBAAgB,CAACY,WAAxB;MAAqCC,OAAO,EAAEN;IAA9C,CAAD,CAAR;EACH,CAJD;AAKH,CANM;AAQP,OAAO,MAAMO,6BAA6B,GAAIC,KAAD,IAAgD;EACzF,OAAO;IAACJ,IAAI,EAAEX,gBAAgB,CAACgB,kBAAxB;IAA4CH,OAAO,EAAEE;EAArD,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,sBAAsB,GAAIF,KAAD,IAAgD;EAClF,OAAO;IAACJ,IAAI,EAAEX,gBAAgB,CAACgB,kBAAxB;IAA4CH,OAAO,EAAEE;EAArD,CAAP;AACH,CAFM"},"metadata":{},"sourceType":"module"}