{"ast":null,"code":"export let ItemsActionTypes;\n\n(function (ItemsActionTypes) {\n  ItemsActionTypes[\"FETCH_ITEMS\"] = \"FETCH_ITEMS\";\n  ItemsActionTypes[\"SET_FILTERED_ITEMS\"] = \"SET_FILTERED_ITEMS\";\n  ItemsActionTypes[\"SET_SORTED_ITEMS\"] = \"SET_SORTED_ITEMS\";\n  ItemsActionTypes[\"SET_CURRENT_PAGE\"] = \"SET_CURRENT_PAGE\";\n  ItemsActionTypes[\"SET_FILTER_FIELD\"] = \"SET_FILTER_FIELD\";\n  ItemsActionTypes[\"SET_FILTER_CONDITION\"] = \"SET_FILTER_CONDITION\";\n  ItemsActionTypes[\"SET_FILTER_VALUE\"] = \"SET_FILTER_VALUE\";\n  ItemsActionTypes[\"SET_SORT_FIELD\"] = \"SET_SORT_FIELD\";\n  ItemsActionTypes[\"SET_SORT_REVERSE\"] = \"SET_SORT_REVERSE\";\n})(ItemsActionTypes || (ItemsActionTypes = {}));","map":{"version":3,"names":["ItemsActionTypes"],"sources":["D:/Programming/Тестовые задания/kanalservis/client/src/types/redux.ts"],"sourcesContent":["import {ItemKeys, TItem} from \".\";\r\n\r\nexport enum ItemsActionTypes {\r\n    FETCH_ITEMS = \"FETCH_ITEMS\",\r\n    SET_FILTERED_ITEMS = \"SET_FILTERED_ITEMS\",\r\n    SET_SORTED_ITEMS = \"SET_SORTED_ITEMS\",\r\n    SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\",\r\n    SET_FILTER_FIELD = \"SET_FILTER_FIELD\",\r\n    SET_FILTER_CONDITION = \"SET_FILTER_CONDITION\",\r\n    SET_FILTER_VALUE = \"SET_FILTER_VALUE\",\r\n    SET_SORT_FIELD = \"SET_SORT_FIELD\",\r\n    SET_SORT_REVERSE = \"SET_SORT_REVERSE\",\r\n}\r\n\r\nexport interface TFetchItemsAction {\r\n    type: ItemsActionTypes.FETCH_ITEMS,\r\n    payload: TItem[]\r\n}\r\n\r\nexport interface TSetFilteredItemsAction {\r\n    type: ItemsActionTypes.SET_FILTERED_ITEMS,\r\n    payload: TItem[]\r\n}\r\n\r\nexport interface TSetSortedItemsAction {\r\n    type: ItemsActionTypes.SET_SORTED_ITEMS,\r\n    payload: TItem[]\r\n}\r\n\r\nexport interface TSetCurrentPageAction {\r\n    type: ItemsActionTypes.SET_CURRENT_PAGE,\r\n    payload: number\r\n}\r\n\r\nexport interface TSetFilterConditionAction {\r\n    type: ItemsActionTypes.SET_FILTER_CONDITION,\r\n    payload: string\r\n}\r\n\r\nexport interface TSetFilterFieldAction {\r\n    type: ItemsActionTypes.SET_FILTER_FIELD,\r\n    payload: ItemKeys\r\n}\r\n\r\nexport interface TSetFilterValueAction {\r\n    type: ItemsActionTypes.SET_FILTER_VALUE,\r\n    payload: string\r\n}\r\n\r\nexport interface TSetSortFieldAction {\r\n    type: ItemsActionTypes.SET_SORT_FIELD,\r\n    payload: ItemKeys | null\r\n}\r\n\r\nexport interface TSetSortReverseAction {\r\n    type: ItemsActionTypes.SET_SORT_REVERSE,\r\n    payload: boolean\r\n}\r\n\r\nexport type ItemsAction = TFetchItemsAction\r\n    | TSetFilteredItemsAction\r\n    | TSetSortedItemsAction\r\n    | TSetCurrentPageAction\r\n    | TSetFilterConditionAction\r\n    | TSetFilterFieldAction\r\n    | TSetFilterValueAction\r\n    | TSetSortFieldAction\r\n    | TSetSortReverseAction;\r\n\r\nexport interface TItemsState {\r\n    allItems: TItem[],\r\n    filteredItems: TItem[],\r\n    sortedItems: TItem[],\r\n    currentPage: number,\r\n    filterField: ItemKeys,\r\n    filterCondition: string\r\n    filterValue: string,\r\n    sortField: ItemKeys | null,\r\n    sortReverse: boolean\r\n}\r\n"],"mappings":"AAEA,WAAYA,gBAAZ;;WAAYA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;GAAAA,gB,KAAAA,gB"},"metadata":{},"sourceType":"module"}